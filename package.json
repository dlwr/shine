{
  "name": "shine",
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "dev": "concurrently -n \"api,front\" -c \"blue,purple\" \"pnpm run api:dev\" \"pnpm run front:dev\"",
    "test": "vitest",
    "test:api": "vitest api/src",
    "test:scrapers": "vitest scrapers/src",
    "test:front": "vitest --config vitest.front.config.ts",
    "test:database": "vitest src",
    "api:dev": "pnpm wrangler dev --config api/wrangler.toml --env development",
    "api:deploy:dev": "pnpm wrangler deploy --config api/wrangler.toml --env development",
    "api:deploy:prod": "pnpm wrangler deploy --config api/wrangler.toml --env production --minify",
    "front:dev": "pnpm --filter front run dev",
    "front:build": "pnpm --filter front run build",
    "front:deploy:dev": "pnpm run front:build && cd front && pnpm wrangler deploy --config build/server/wrangler.json --name shine-front-dev",
    "front:deploy:prod": "pnpm run front:build && cd front && pnpm wrangler deploy --config build/server/wrangler.json --name shine-front --minify",
    "scrapers:academy-awards": "pnpm --filter scrapers tsx src/academy-awards-cli.ts",
    "scrapers:japan-academy-awards": "pnpm --filter scrapers tsx src/japan-academy-awards-cli.ts",
    "scrapers:movie-posters": "pnpm --filter scrapers tsx src/movie-posters-cli.ts",
    "scrapers:japanese-translations": "pnpm --filter scrapers tsx src/japanese-translations-cli.ts",
    "scrapers:cannes-film-festival": "pnpm --filter scrapers tsx src/cannes-film-festival-cli.ts",
    "scrapers:movie-import": "pnpm --filter scrapers tsx src/movie-import-from-list-cli.ts",
    "scrapers:assign-imdb-ids": "pnpm --filter scrapers run assign-imdb-ids",
    "db:studio": "node scripts/setup-database-environment.cjs drizzle-kit studio",
    "db:generate": "node scripts/setup-database-environment.cjs drizzle-kit generate",
    "db:migrate": "node scripts/setup-database-environment.cjs drizzle-kit migrate",
    "db:push": "node scripts/setup-database-environment.cjs drizzle-kit push",
    "db:studio:prod": "NODE_ENV=production node scripts/setup-database-environment.cjs drizzle-kit studio",
    "db:generate:prod": "NODE_ENV=production node scripts/setup-database-environment.cjs drizzle-kit generate",
    "db:migrate:prod": "NODE_ENV=production node scripts/setup-database-environment.cjs drizzle-kit migrate",
    "db:push:prod": "NODE_ENV=production node scripts/setup-database-environment.cjs drizzle-kit push",
    "docs:validate": "redocly lint api/openapi.yml",
    "docs:build": "redocly build-docs api/openapi.yml --output docs/api.html",
    "docs:serve": "redocly preview-docs api/openapi.yml",
    "docs:bundle": "redocly bundle api/openapi.yml --output api/openapi.json",
    "lint": "xo",
    "lint:fix": "xo --fix",
    "lint:front": "cd front && npx eslint --ext .ts,.tsx .",
    "lint:front:fix": "cd front && npx eslint --ext .ts,.tsx . --fix",
    "type-check": "tsc --noEmit",
    "check": "concurrently -n \"lint,types\" -c \"yellow,green\" \"xo\" \"tsc --build --noEmit\"",
    "typegen": "cd front && npx react-router typegen"
  },
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "^0.8.53",
    "@cloudflare/workers-types": "^4.20250816.0",
    "@redocly/cli": "^1.34.3",
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^24.0.14",
    "@vitest/coverage-v8": "^3.2.4",
    "better-sqlite3": "^12.1.1",
    "concurrently": "^9.1.2",
    "drizzle-kit": "^0.31.1",
    "globals": "^16.0.0",
    "jsdom": "^26.1.0",
    "msw": "^2.10.4",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.2",
    "vitest": "^3.2.4",
    "wrangler": "^4.25.1",
    "xo": "^1.2.1"
  },
  "dependencies": {
    "@libsql/client": "^0.15.9",
    "dotenv": "^17.2.0",
    "drizzle-orm": "^0.44.3",
    "zod": "^4.0.5"
  },
  "workspaces": [
    "api",
    "scrapers",
    "front"
  ],
  "xo": {
    "ignores": [
      "**/.wrangler/**",
      "**/dist/**",
      "**/node_modules/**",
      "**/*.mjs",
      "**/*.js",
      "**/*.cjs",
      "**/.astro/**",
      "**/worker-configuration.d.ts",
      "**/build/**",
      "**/test-results/**",
      "**/.react-router/**",
      "**/coverage/**",
      "**/.cache/**",
      "**/tmp/**",
      "**/scripts/**",
      "**/package.json"
    ],
    "rules": {
      "@typescript-eslint/naming-convention": "off",
      "import-x/no-extraneous-dependencies": "off",
      "n/no-extraneous-import": "off",
      "import-x/extensions": "off",
      "complexity": [
        "warn",
        40
      ],
      "max-depth": [
        "warn",
        8
      ],
      "max-nested-callbacks": [
        "warn",
        8
      ],
      "@typescript-eslint/prefer-nullish-coalescing": [
        "error",
        {
          "ignoreTernaryTests": true,
          "ignoreConditionalTests": true,
          "ignorePrimitives": {
            "string": true,
            "number": true,
            "bigint": true,
            "boolean": true
          }
        }
      ],
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-unsafe-argument": "off",
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/no-unsafe-call": "off",
      "@typescript-eslint/no-unsafe-return": "off",
      "no-await-in-loop": "off",
      "import-x/no-anonymous-default-export": "off",
      "n/prefer-global/process": "off",
      "unicorn/no-process-exit": "off",
      "no-bitwise": "off",
      "@typescript-eslint/member-ordering": "off",
      "max-params": [
        "warn",
        6
      ],
      "@typescript-eslint/consistent-type-assertions": "off",
      "n/prefer-global/buffer": "off",
      "no-alert": "off",
      "promise/prefer-await-to-then": "off",
      "no-return-assign": "off",
      "@typescript-eslint/no-confusing-void-expression": "off"
    },
    "prettier": true
  }
}
