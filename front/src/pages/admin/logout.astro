---
import Layout from "../../layouts/Layout.astro";

function getLocaleFromRequest(request: Request): string {
  const url = new URL(request.url);
  const localeParam = url.searchParams.get('locale');
  if (localeParam && ['en', 'ja'].includes(localeParam)) {
    return localeParam;
  }

  const acceptLanguage = request.headers.get('accept-language');
  if (acceptLanguage) {
    const languages = acceptLanguage
      .split(',')
      .map(lang => lang.trim().split(';')[0].split('-')[0])
      .filter(lang => ['en', 'ja'].includes(lang));
    
    if (languages.length > 0) {
      return languages[0];
    }
  }

  return 'en';
}

const locale = getLocaleFromRequest(Astro.request);

const translations = {
  en: {
    title: "Admin Logout - SHINE",
    heading: "Logging out...",
    message: "You have been logged out successfully.",
    redirecting: "Redirecting to home page..."
  },
  ja: {
    title: "管理者ログアウト - SHINE", 
    heading: "ログアウト中...",
    message: "正常にログアウトしました。",
    redirecting: "ホームページにリダイレクト中..."
  }
};

const t = translations[locale as keyof typeof translations] || translations.en;
---

<Layout title={t.title}>
  <main class="logout-main">
    <div class="logout-container">
      <div class="spinner"></div>
      <h1 id="heading">{t.heading}</h1>
      <p id="message">{t.message}</p>
    </div>
  </main>
</Layout>

<style>
  .logout-main {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 1rem;
  }

  .logout-container {
    background: white;
    padding: 3rem 2rem;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    text-align: center;
    max-width: 400px;
    width: 100%;
  }

  .spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #e5e7eb;
    border-top: 4px solid #3b82f6;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1.5rem;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  h1 {
    color: #1f2937;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  p {
    color: #6b7280;
    font-size: 1rem;
    margin: 0;
  }

  .hidden {
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }

  .visible {
    opacity: 1;
    transform: translateY(0);
    transition: all 0.3s ease;
  }
</style>

<script define:vars={{ locale, translations }} is:inline>
  const t = translations[locale] || translations.en;
  const heading = document.getElementById('heading');
  const message = document.getElementById('message');
  
  // Clear admin token
  localStorage.removeItem('adminToken');
  
  // Dispatch logout event for any listening components
  window.dispatchEvent(new Event('adminLogout'));
  
  // Update UI after logout
  setTimeout(() => {
    heading.textContent = t.message;
    message.textContent = t.redirecting;
    
    // Redirect to home after showing success message
    setTimeout(() => {
      window.location.href = '/';
    }, 1500);
  }, 1000);
</script>